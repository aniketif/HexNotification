/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginbackend;

import Notification.NewMessageNotify;
import static Notification.NewMessageNotify.passUsername;
import static Notification.Notification.displayTray;
import encryption.AdvancedEncryptionStandard;
import java.awt.AWTException;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.html.HTML;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;

/**
 *
 * @author Aniket
 */
public class messagereceiver extends javax.swing.JFrame {

NewMessageNotify t1=new NewMessageNotify();  
                        
String[] anotherArray;

final String secretKey = "ssshhhhhhhhhhh!!!!";


String logedinperson;
    /**
     * Creates new form messagereceiver
     */
    public messagereceiver(String logedin) {
        
        logedinperson = logedin;
        passUsername(logedinperson);
        NewMessageNotify t1=new NewMessageNotify();  
        t1.start();
        jList1 = new javax.swing.JList<>();
        jEditorPane1 = new javax.swing.JEditorPane();
        //getsenders();
        getsenders();
        initComponents();
       setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo_1.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hex Notification");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jList1.setFont(new java.awt.Font("Dutch801 XBd BT", 1, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {

            public int getSize() { return anotherArray.length; }
            public String getElementAt(int i) { return anotherArray[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jButton2.setBackground(new java.awt.Color(0, 90, 171));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginbackend/icons8-logout-rounded-left-100.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jEditorPane1.setEditable(false);
        jScrollPane2.setViewportView(jEditorPane1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));

        jMenu1.setText("About");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMenu1MouseExited(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            t1.sleep(100);
        } 
        catch (InterruptedException e) 
        {
            e.printStackTrace();
        }
        t1.stopRunning();
        setVisible(false);
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed


    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        int idx = jList1.getSelectedIndex();
        if (idx != -1)
    {
        int numberofmessage;
        String[] messagesArray;
        String location = "jdbc:sqlite:"+ System.getProperty("user.dir")+ "\\DataBase\\"+logedinperson+".db";
        String numberofmessages_sql = "SELECT COUNT(*) FROM "+logedinperson+" WHERE `sendername` = ?";
        String getmessages_sql = "SELECT `message`, `image` FROM "+logedinperson+" WHERE `sendername` = ?";
        try{  
            try (Connection conn = DriverManager.getConnection(location)) {
                PreparedStatement stmt = conn.prepareStatement(numberofmessages_sql);
                stmt.setString(1, AdvancedEncryptionStandard.encrypt(anotherArray[jList1.getSelectedIndex()],secretKey));
                ResultSet rs  = stmt.executeQuery();
                numberofmessage = Integer.parseInt(rs.getString(1));
                messagesArray = new String[numberofmessage];
                PreparedStatement gstmt = conn.prepareStatement(getmessages_sql);
                gstmt.setString(1, AdvancedEncryptionStandard.encrypt(anotherArray[jList1.getSelectedIndex()],secretKey));
                ResultSet grs  = gstmt.executeQuery();
                
                for (int i = 0; i < numberofmessage; i++) 
                {
                   grs.next();
                   if(grs.getString(2)==null){
                   messagesArray[i] = "<table border='0' width='100%' cellspacing='0' cellpadding='0'><tr><td bgcolor='#4287f5'><h1 style=\"color:white;\">"+AdvancedEncryptionStandard.decrypt(grs.getString(1), secretKey)+"</h><p></td></tr></table>";
                }
                else
                   {
                       messagesArray[i] = "<table border='0' width='100%' cellspacing='0' cellpadding='0'><tr><td bgcolor='#4287f5'><h1 style=\"color:white;\">"+AdvancedEncryptionStandard.decrypt(grs.getString(1), secretKey)+"</h><p><img width=\"1000\" height=\"700\" border=\"0\" src=\"file:///"+grs.getString(2)+"\" alt=\"Image not found\"></td></tr></table>";
                   }
                   
                }
                jEditorPane1.setContentType("text/html");
            
                String messages = "";
                for (String element: messagesArray) {
                   
                   messages = messages + element +"<br>";
                   jEditorPane1.setText(messages);
                         
        }
                System.out.println(messages);
        conn.close();
            }
            
            
            
        }
        catch (SQLException e) {  
            JOptionPane.showMessageDialog(null,e.getMessage());  
        }
        
    }
    }//GEN-LAST:event_jList1ValueChanged

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        new about().setVisible(true);
        
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseEntered
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jMenu1MouseEntered

    private void jMenu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseExited
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jMenu1MouseExited
  
public void getsenders() {
        int numberofsender;
        String[] tempSender;
        String location = "jdbc:sqlite:"+ System.getProperty("user.dir")+ "\\DataBase\\"+logedinperson+".db";
        String numberofmessages_sql = "SELECT COUNT(*) FROM "+logedinperson;
        String getsendernames_sql = "SELECT sendername FROM "+logedinperson;
        try{  
            try (Connection conn = DriverManager.getConnection(location)) {
                PreparedStatement stmt = conn.prepareStatement(numberofmessages_sql);
                ResultSet rs  = stmt.executeQuery();
                numberofsender = Integer.parseInt(rs.getString(1));
                int count=0;
                tempSender = new String[numberofsender];
                PreparedStatement gstmt = conn.prepareStatement(getsendernames_sql);
                ResultSet grs  = gstmt.executeQuery();
                
                for (int i = 0; i < numberofsender; i++) 
                {
                   grs.next();
                   tempSender[i] = AdvancedEncryptionStandard.decrypt(grs.getString(1), secretKey);
                   
                }
                 
                for(int s=0;s<tempSender.length-1;s++)
                {
                    for(int m=s + 1;m<tempSender.length;m++)
                    {

                        if(tempSender[s] != null && tempSender[s].equals(tempSender[m]))
                        {
                            // array = ArrayUtils.removeElement(array, array[s]); --m;??
                             tempSender[m] = null; // Mark for deletion later on
                        }
                    } 
                }
            
                for(int s=0;s<tempSender.length;s++)
                {
                    if(tempSender[s] == null)
                    {
                    // array = ArrayUtils.removeElement(array, array[s]); --m;??
                        count++; // Mark for deletion later on
                    }
                   
                }
                
                anotherArray = new String[tempSender.length - count];
            
                int added=0;
                for (int i = 0; i < tempSender.length; i++) {
                 
                    if(tempSender[i]==null){
                     continue;
                    }
                    else
                    {
                        anotherArray[added]=tempSender[i];
                        System.out.println(tempSender[i]);
                        added++;
                    }  
                }
                conn.close();
            } 
            
        }
          
        catch (SQLException e) {  
            JOptionPane.showMessageDialog(null,e.getMessage());  
        }  
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void printStyleAttributes(Style style) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
